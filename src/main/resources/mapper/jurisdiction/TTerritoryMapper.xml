<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.litte.mapper.jurisdiction.TTerritoryMapper" >
  <resultMap id="BaseResultMap" type="com.litte.entity.jurisdiction.TTerritory" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="territory" property="territory" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, territory, create_time, remark
  </sql>

  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.litte.entity.jurisdiction.TTerritory" >
    select
    <include refid="Base_Column_List" />
    from t_territory
    <where>
      <if test="territory != null and territory != ''">
        and territory like  concat('%',#{territory,jdbcType=VARCHAR},'%' )
      </if>
    </where>
    order by create_time desc
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from t_territory
    where id = #{id,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.util.List" >
    delete from t_territory
    where id in
    <foreach collection="list" item="ids" separator="," open="(" close=")" >
      '${ids}'
    </foreach>
  </delete>

  <insert id="insert" parameterType="com.litte.entity.jurisdiction.TTerritory" >
    insert into t_territory (id, territory,create_time, remark
      )
    values (#{id,jdbcType=VARCHAR}, #{territory,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.litte.entity.jurisdiction.TTerritory" >
    insert into t_territory
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="territory != null" >
        territory,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="territory != null" >
        #{territory,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
        <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.litte.entity.jurisdiction.TTerritory" >
    update t_territory
    <set >
      <if test="territory != null" >
        territory = #{territory,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.litte.entity.jurisdiction.TTerritory" >
    update t_territory
    set territory = #{territory,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>