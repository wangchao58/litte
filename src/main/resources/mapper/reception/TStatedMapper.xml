<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.litte.mapper.reception.TStatedMapper" >
  <resultMap id="BaseResultMap" type="com.litte.entity.reception.TStated" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="s_amount" property="sAmount" jdbcType="VARCHAR" />
    <result column="s_real" property="sReal" jdbcType="VARCHAR" />
    <result column="is_succeed" property="isSucceed" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, create_time, s_amount, s_real, is_succeed
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.litte.entity.reception.TStated" >
    select
    <include refid="Base_Column_List" />
    from t_stated
    <where>
      <if test="userId != null" >
        user_id= #{userId,jdbcType=VARCHAR}
      </if>
    </where>
    order by create_time desc
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_stated
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_stated
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.litte.entity.reception.TStated" >
    insert into t_stated (id, user_id, create_time, 
      s_amount, s_real)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{sAmount,jdbcType=VARCHAR}, #{sReal,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.litte.entity.reception.TStated" >
    insert into t_stated
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="sAmount != null" >
        s_amount,
      </if>
      <if test="sReal != null" >
        s_real,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sAmount != null" >
        #{sAmount,jdbcType=VARCHAR},
      </if>
      <if test="sReal != null" >
        #{sReal,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.litte.entity.reception.TStated" >
    update t_stated
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sAmount != null" >
        s_amount = #{sAmount,jdbcType=VARCHAR},
      </if>
      <if test="sReal != null" >
        s_real = #{sReal,jdbcType=VARCHAR},
      </if>
      <if test="isSucceed != null" >
        is_succeed = #{isSucceed,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.litte.entity.reception.TStated" >
    update t_stated
    set user_id = #{userId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      s_amount = #{sAmount,jdbcType=VARCHAR},
      s_real = #{sReal,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

</mapper>